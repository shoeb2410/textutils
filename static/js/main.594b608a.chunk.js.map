{"version":3,"sources":["component/Navbar.js","component/Textform.js","component/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","repeat","setRepeat","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","textRepeat","slice","length","toLowerCase","nText","split","join","strArr","res","i","indexOf","lastIndexOf","includes","push","filter","element","replace","Alerts","Alert","class","role","msg","App","setMode","setAlert","showAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.594b608a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n\r\n       <div className=\"container-fluid\">\r\n         {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n         <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n         <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n           <span className=\"navbar-toggler-icon\"></span>\r\n         </button>\r\n         <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n             <li className=\"nav-item\">\r\n               {/* <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n               <a className=\"nav-link \" aria-current=\"page\" href=\"/\">Home</a>\r\n             </li>\r\n             <li className=\"nav-item\">\r\n               {/* <Link className=\"nav-link\" to=\"/about\">About</Link> */}\r\n               <a className=\"nav-link\" href=\"/about\">About</a>\r\n             </li>\r\n             \r\n           </ul>\r\n           \r\n           <div className={`form-check form-switch text-${props.mode === \"light\"? \"dark\": \"light\"}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode}   id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode=== \"light\"? \"Enable Dark mode\": \"Enable light mode\"}</label>\r\n</div>\r\n\r\n           \r\n         </div>\r\n       </div>\r\n     </nav>\r\n        </>\r\n    \r\n        \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutus: PropTypes.string\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n        \r\n        \r\n        const handleUpClick = () => {\r\n\r\n                let newText = text.toUpperCase();\r\n                setText(newText)\r\n        }\r\n\r\n        const handleonClick = () => {\r\n\r\n               let textRepeat = text.slice(0,1,).toUpperCase() + text.slice(1,text.length).toLowerCase()\r\n                \r\n               setText(textRepeat)\r\n               \r\n\r\n\r\n               \r\n               \r\n        }\r\n  \r\n        \r\n        const handleDownClick = () => {\r\n\r\n                let newText = text.toLowerCase();\r\n                setText(newText)\r\n        }\r\n\r\n        const clearOnclick = () =>{\r\n\r\n                setText(\"\");\r\n        }\r\n\r\n        const handleOnExtraspace = () =>{\r\n\r\n              let nText = text.split(/[ ]+/);\r\n              setText(nText.join(\" \")) \r\n        }\r\n        \r\n\r\n       const repeatedWord = () =>{\r\n\r\n        const strArr = text.split(\" \");\r\n    const res = [];\r\n   for(let i = 0; i < strArr.length; i++){\r\n      if(strArr.indexOf(strArr[i]) !== strArr.lastIndexOf(strArr[i])){\r\n         if(!res.includes(strArr[i])){\r\n            res.push(strArr[i]);\r\n            res.push( repeat );\r\n\r\n            \r\n         };\r\n      };\r\n\r\n//       setText(res.join(\" \"))\r\n      setRepeat(res.join(\" \"))\r\n}\r\n\r\n\r\n       }\r\n\r\n        const changeOnClick = (event) =>{\r\n                setText(event.target.value)\r\n        }\r\n\r\n        const removeWord = () =>{\r\n\r\n                setRepeat(\"\");\r\n        }\r\n\r\n        const [repeat,setRepeat] = useState(\"\");\r\n\r\n       \r\n     const [text,setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\" style ={{  color : props.mode === `light` ? `black`: `white` }}>\r\n        <h1 className=\"my-3\">{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  \r\n  <textarea className=\"form-control\"  id=\"mybox\" style ={{ backgroundColor : props.mode === `dark` ? `grey`: `white` , color : props.mode === `light` ? `black`: `white` }} value={text} onChange={changeOnClick} rows=\"8\"></textarea>\r\n  <button className=\"btn btn-primary my-3 mx-2\" onClick={handleUpClick} >Convert to Uppercase</button>\r\n  <button className=\"btn btn-primary my-3 mx-2\" onClick={handleonClick} >Convert to First letter to Uppercase</button>\r\n  <button className=\"btn btn-primary my-3 mx-2\" onClick={handleDownClick} >Convert to Lowercase</button>\r\n  <button className=\"btn btn-primary my-3 mx-2\" onClick={clearOnclick} >Clear text </button>\r\n  <button className=\"btn btn-primary my-3 mx-2\" onClick={handleOnExtraspace} > Remove Extra Space </button>\r\n  <button className=\"btn btn-primary \"  onClick={repeatedWord}>Repeated words</button>\r\n   {/* <p>Text to be Repalced </p><input class=\"form-control me-2\" type=\" \" />\r\n   <p>Text to be Repalced With</p><input class=\"form-control me-2\" type=\" \" />\r\n        <button class=\"btn btn-outline-primary\" >Replace</button> */}\r\n           \r\n  \r\n</div>\r\n</div>\r\n\r\n<div className=\"container\" style ={{  color : props.mode === `light` ? `black`: `white` }}>\r\n\r\n        <h2>Here is your Text Summary: </h2>\r\n         <p> The number of Words: {text.split(\" \").filter ((element) => {return element.length!==0}).length }  </p>\r\n         <p> The number of Characters:  {text.replace(/ /g, \"\").length} </p>\r\n        <p> The number of Sentences:  {text.split(\".\").filter ((element) => {return element.length!==0}).length} </p>\r\n        <p> The number of Repeated Words: {repeat.split(\" \").filter ((element) => {return element.length!==0}).length }  </p>\r\n       <p>The Repeated words are : { repeat }</p>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={removeWord} >Clear repeated words</button>\r\n        \r\n\r\n        <h2>Preview :</h2>\r\n        <p>{text.length>0?text:\"Please enter some text in textarea to preview here. \"}</p>\r\n</div>\r\n</>\r\n        \r\n        )\r\n}\r\n","import React from 'react'\r\n\r\n\r\n\r\nexport default function Alerts(props) {\r\n    return (\r\n        \r\n          props.Alert &&  <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n  <strong>{props.Alert.type}</strong> : {props.Alert.msg } \r\n  \r\n</div>\r\n\r\n\r\n    )\r\n}\r\n","\nimport './App.css';\n\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\n// import About from './component/About';\nimport Alerts from './component/Alerts';\nimport React,{useState} from 'react'\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n  \n// } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n\n\n  const [mode,setMode] = useState(\"light\");\n\n  const [Alert,setAlert] = useState(null);\n\n  const showAlert = (message,type) => {\n\n    setAlert({\n\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      \n      setAlert(null)\n    }, 1500);\n    \n  }\n\n  const toggleMode = () =>{\n\n    if(mode === \"light\"){\n\n      setMode(\"dark\")\n\n      document.body.style.backgroundColor = \"grey\"; \n      showAlert(\"Dark mode is Enable\",\"success\");\n\n\n      \n    }\n    else{\n\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light  mode is Enable\",\"success\");\n\n      \n    }\n  }\n\n\n  \n  return (\n    <>\n     {/* <Router> */}\n\n    <Navbar title=\"Textilyzer\" mode={mode}  toggleMode={toggleMode}  />\n    <Alerts Alert={Alert} />\n      <div className=\"container\">\n\n       \n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About  />\n          </Route>\n          <Route exact  path=\"/\"> */}\n          <Textform heading=\"Enter your text here:\" mode={mode}  toggleMode={toggleMode} />   \n          {/* </Route>\n        </Switch> */}\n      </div> \n   {/* </Router> */}\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}